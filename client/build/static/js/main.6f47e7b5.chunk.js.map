{"version":3,"sources":["styles/images/gitlab.png","App.js","components/HomePageComponent.js","components/ListUrlComponent.js","components/loadingSpinner.js","components/AddGitURL.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","console","log","fetch","method","headers","Accept","Content-Type","body","then","res","json","react_default","a","createElement","className","src","logo","alt","id","href","Component","HomePageComponent","style","backgroundColor","AppBar_default","position","Toolbar_default","Link","to","IconButton_default","color","aria-label","Home_default","Typography_default","variant","ListUrlComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","listdata","data","_this2","Rx","fromPromise","subscribe","setState","components_HomePageComponent","map","x","i","Card_default","CardHeader_default","avatar","Avatar_default","CheckCircle_default","title","app_name","subheader","React","loadingSpinner","CircularProgress_default","thickness","AddGitURL","handleClickButton","loading","document","getElementById","value","context","components_loadingSpinner","socket","io","pipe","filter","url","JSON","stringify","on","display","innerHTML","concat","Paper_default","elevation","TextField_default","label","type","name","autoComplete","margin","Button_default","onClick","maxHeight","overflow","padding","background","fontSize","List_default","AppRouter","HashRouter","Route","path","component","exact","Switch","Boolean","window","location","hostname","match","ReactDOM","render","routers_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yXCmCzBC,yLA3BXC,QAAQC,IAAI,WAEZC,MAAK,UAAY,CACfC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,qCAElBC,KAPU,sDASTC,KAAK,SAAAC,GAAS,OAAOA,EAAIC,SACzBF,KAAK,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,sCAI3B,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWI,GAAG,cAAcC,KAAI,SAA7C,mCAtBQC,gMCoCHC,MA5Bf,WACE,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOQ,MAAO,CAACC,gBAAiB,QAC7CZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,SAAS,SAASX,UAAU,OAClCH,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACED,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAE,QAAWd,UAAU,OAC3BH,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYE,UAAU,aAAagB,MAAM,UAAUC,aAAW,QAC5DpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,QAGJD,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAE,WAAcd,UAAU,OAChCH,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAYsB,QAAQ,KAAKJ,MAAM,UAAUhB,UAAU,QAAnD,QAIAH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAE,UAAad,UAAU,OAC/BH,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAYsB,QAAQ,KAAKJ,MAAM,UAAUhB,UAAU,QAAnD,WAIAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,wCCyBMqB,cA3Cd,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,SAAU,GACVC,KAAK,IAJST,oFASE,IAAAU,EAAAP,KAClBQ,aAAcC,YAAY/C,MAAM,SAASM,KAAK,SAACsC,GAAD,OAAQA,EAAKpC,UAC1DwC,UAAU,SAACJ,GACVC,EAAKI,SAAS,CACZL,KAAKA,uCAOX,OADE9C,QAAQC,IAAIuC,KAAKI,MAAME,MAEvBnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuC,EAAD,MACCZ,KAAKI,MAAME,KAAKO,IAAI,SAACC,EAAIC,GAAL,OACjB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAME,UAAU,QACdH,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CACE8C,OACE/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAQmB,aAAW,SAASjB,UAAU,UACpCH,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAaE,UAAU,iBAG3B+C,MAAOP,EAAEQ,SACTC,UAAU,mCAnCKC,IAAM5C,oGCFrB6C,MARhB,SAAwB7B,GACtB,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAkBE,UAAW,WAAWqD,UAAW,6DC0G1CC,eAhGb,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACjB/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KA4CRiC,kBAAoB,WAClBrE,QAAQC,IAAI,2BAA4BoC,EAAKO,MAAM0B,SAC/CC,SAASC,eAAe,yBAAyBC,OACnDpC,EAAKc,SAAS,CACZuB,QAAS/D,EAAAC,EAAAC,cAAC8D,EAAD,SA/CbtC,EAAKO,MAAQ,CACX8B,QAAS,IAHMrC,mFAOC,IAAAU,EAAAP,KACZoC,EAASC,OACf7E,QAAQC,IAAI,eACZ+C,IAAauB,SAASC,eAAe,wBAAyB,SAC3DM,KAAKzB,YAAI,WACR,OAAOkB,SAASC,eAAe,yBAAyBC,QAExDM,YAAO,SAACjC,GACN,MAAgB,KAATA,KAEVI,UAAU,SAAC8B,GACV9E,MAAK,UAAY,CACfC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAM0E,KAAKC,UAAU,CACnBF,IAAOA,MAGRxE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAIJ,OAHIA,GACFsC,EAAKI,SAAS,CAAEuB,QAAS,KAEpBjE,IAERD,KAAK,SAAAC,GAAG,OAAIT,QAAQC,IAAI,gBAAiBQ,OAGhDmE,EAAOO,GAAG,OAAQ,SAACrC,GACjByB,SAASC,eAAe,UAAUlD,MAAM8D,QAAU,QAClDb,SAASC,eAAe,UAAUa,WAAlC,GAAAC,OAAkDxC,EAAlD,6CAeK,IACC4B,EAAYlC,KAAKI,MAAjB8B,QACR,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAOE,UAAU,QAAQ0E,UAAW,IAClC7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACEM,GAAG,wBACHwE,MAAM,SACN5E,UAAU,aACV6E,KAAK,QACLC,KAAK,QACLC,aAAa,QACbC,OAAO,SACP5D,QAAQ,aAEVvB,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CACEsB,QAAQ,WACRJ,MAAM,UACNhB,UAAU,UACVI,GAAG,uBACH0E,KAAK,eACLI,QAASxD,KAAK6B,mBANhB,UAUCK,IAIL/D,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAOM,GAAG,SAASJ,UAAW,QAASQ,MAAO,CAAE2E,UAAW,IAAKC,SAAU,OAAQC,QAAS,GAAIC,WAAY,QAAStE,MAAO,QAASsD,QAAS,OAAQiB,SAAU,WAC7J1F,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,eAxFcoD,IAAM5C,WCOfmF,OAZf,WACG,OAAS5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACR7F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,KAAK,IAAIC,UAAW5G,EAAK6G,OAAO,IACxCjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACIlG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,KAAK,QAASC,UAAWtF,IACjCV,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,KAAK,WAAYC,UAAWxE,IACpCxB,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQC,KAAK,UAAWC,UAAWvC,SCL3B0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,GAAD,MAAe9C,SAASC,eAAe,SD2HjD,kBAAmB8C,WACrBA,UAAUC,cAAcC,MAAMhH,KAAK,SAAAiH,GACjCA,EAAaC","file":"static/js/main.6f47e7b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitlab.11d38b71.png\";","import React, { Component } from 'react';\nimport logo from './styles/images/gitlab.png';\nimport './styles/App.css';\n\n\nclass App extends Component {\n\n  test() {\n    console.log(\"clicked\");\n    const url = \"https://github.com/yravinderkumar33/portfolio.git\";\n    fetch(`/deploy`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: url\n    })\n      .then(res => { return res.json() })\n      .then(res => console.log(res))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <a className=\"App-link\" id=\"loginButton\" href={`/auth`}> Connect using Gitlab </a>\n          {/* <button onClick={this.test}> test </button> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Home from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/homepage.css';\n\nfunction HomePageComponent() {\n  return (\n    <div className=\"root\" style={{backgroundColor: 'red'}}>\n      <AppBar position=\"static\" className=\"app\">\n        <Toolbar>\n          <Link to={`/home`} className=\"lnk\">\n            <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n              <Home />\n            </IconButton>\n          </Link>\n          <Link to={`/listUrl`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             App \n          </Typography>\n          </Link>\n          <Link to={`/newApp`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             NewApp \n          </Typography>\n          </Link>\n          <span className=\"heading\">\n          Rx-Actor Model</span>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default HomePageComponent;\n","/*eslint react/jsx-filename-extension: 0 */\n/*eslint react/prop-types: 0 */\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport HomePageComponent from './HomePageComponent';\nimport '../styles/ListUrlComponent.css';\nimport * as Rx from 'rxjs-compat'\n\n\nclass ListUrlComponent extends React.Component {\n \n  constructor(props){\n    super(props);\n    this.state = {\n      listdata: [],\n      data:[]\n    };\n  }\n\n\n  componentWillMount(){\n    Rx.Observable.fromPromise(fetch('/apps').then((data)=>data.json()))\n    .subscribe((data)=>{\n      this.setState({\n        data:data\n      })\n    });\n  }\n  \n  render(){\n    console.log(this.state.data)\n  return (\n    <div>\n      <HomePageComponent />\n      {this.state.data.map((x , i) =>\n          <div className=\"root\">\n            <Card className=\"card\">\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Recipe\" className=\"avatar\">\n                    <CheckCircle className=\"checkCircle\" />\n                  </Avatar>\n                }\n                title={x.app_name}\n                subheader=\"September 14, 2016\"\n              />\n            </Card>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n}\nexport default (ListUrlComponent);\n\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction loadingSpinner(props) {\n  return (\n    <div>\n      <CircularProgress className= \"progress\" thickness={7} />\n    </div>\n  );\n}\n\nexport default (loadingSpinner);","/*eslint react/jsx-filename-extension: 0 */\n/* eslint react/forbid-prop-types: 0 */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List'\nimport HomePageComponent from './HomePageComponent';\nimport ProgressBar from './loadingSpinner';\nimport '../styles/AddGitUrl.css';\nimport * as Rx from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport io from 'socket.io-client';\n\n\nclass AddGitURL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      context: ''\n    }\n  }\n\n  componentDidMount() {\n    const socket = io();\n    console.log('before rxjs');\n    Rx.fromEvent(document.getElementById(\"outlined-email-input\"), \"click\")\n      .pipe(map(() => {\n        return document.getElementById(\"outlined-email-input2\").value;\n      }),\n        filter((data) => {\n          return data !== \"\"\n        }))\n      .subscribe((url) => {\n        fetch(`/deploy`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            \"url\": url\n          })\n        })\n          .then(res => res.json())\n          .then(res => {\n            if (res) {\n              this.setState({ context: '' })\n            }\n            return res;\n          })\n          .then(res => console.log('this is res: ', res))\n      })\n\n    socket.on('chat', (data) => {\n      document.getElementById(\"logger\").style.display = 'block';\n      document.getElementById(\"logger\").innerHTML += `${data} <br/>`;\n    })\n\n  }\n\n  handleClickButton = () => {\n    console.log('inside handleClickButton', this.state.loading);\n    if (document.getElementById(\"outlined-email-input2\").value) {\n      this.setState({\n        context: <ProgressBar />\n      })\n    }\n  }\n\n\n  render() {\n    const { context } = this.state;\n    return (\n      <div className=\"main\">\n        <HomePageComponent />\n        <Paper className=\"root1\" elevation={20}>\n          <div className=\"text1\">\n            <TextField\n              id=\"outlined-email-input2\"\n              label=\"GitURL\"\n              className=\"textField1\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"button1\"\n              id=\"outlined-email-input\"\n              name=\"buttonSubmit\"\n              onClick={this.handleClickButton}\n            >\n              Deploy\n                        </Button>\n            {context}\n          </div>\n        </Paper>\n\n        <Paper id=\"logger\" className={\"root2\"} style={{ maxHeight: 150, overflow: 'auto', padding: 20, background: \"black\", color: \"white\", display: 'none', fontSize: '0.8rem' }}>\n          <List>\n\n          </List>\n        </Paper>\n\n      </div>\n    )\n  }\n}\nexport default AddGitURL;\n\n\n\n\n\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport App from '../App';\nimport ListUrlComponent from '../components/ListUrlComponent';\nimport AddGitURL from '../components/AddGitURL';\nimport HomePageComponent from '../components/HomePageComponent';\n\n\nfunction AppRouter () {\n   return ( <HashRouter>\n    <div>\n        <Route  path='/' component={App} exact={true} />\n        <Switch>\n            <Route  path='/home'  component={HomePageComponent}  />\n            <Route  path='/listUrl'  component={ListUrlComponent} />\n            <Route  path='/newApp'  component={AddGitURL} />\n        </Switch>\n    </div>\n    </HashRouter>)\n}\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}